---
- name: Bootstrap remote state infrastructure
  hosts: localhost
  connection: local
  become: false
  tasks:
  - name: "Bootstrap GCP"
    include_role:
      name: manage_terraform_stage
    vars:
      stage_path: 0-bootstrap
      state: present
      terraform_variables:
        org_id: "{{ lookup('env','GOOGLE_ORGANIZATION_ID') }}"
        billing_account: "{{ lookup('env','GOOGLE_BILLING_ACCOUNT_ID') }}"
        group_org_admins: "{{ lookup('env','GOOGLE_IAM_GROUP_ORG_ADMIN') }}"
        group_billing_admins: "{{ lookup('env','GOOGLE_IAM_GROUP_BILLING_ADMIN') }}"
        default_region: "{{ lookup('env','GOOGLE_DEFAULT_REGION') }}"
        circleci_personal_token: "{{ lookup('env','CIRCLECI_PERSONAL_TOKEN') }}"
        github_personal_token: "{{ lookup('env','GITHUB_PERSONAL_TOKEN') }}"
        github_organization_name: "{{ lookup('env','GITHUB_ORGANIZATION_NAME') }}"

  - name: "Get terraform outputs from terraform state"
    command: "terraform output -json"
    args:
      chdir: "{{ playbook_dir }}/../0-bootstrap"
    register: tf_output_result

  - name: "Parse terraform outputs"
    set_fact:
      bootstrap_outputs: "{{ tf_output_result.stdout | from_json }}"

  - name: "Setup remote backend"
    template:
      src: "{{ playbook_dir }}/templates/backend.tf.j2"
      dest: "{{ playbook_dir }}/../0-bootstrap/backend.tf"

  - name: "Setup remote backend"
    command: "terraform init -force-copy"
    args:
      chdir: "{{ playbook_dir }}/../0-bootstrap"

#.circleci/config.yml

  - name: "Print outputs"
    debug:
      msg: "{{ item.key }}: {{ item.value }}"
    with_dict: "{{ bootstrap_outputs.github_repositories.value }}"

  - name: "Bootstrap GCP"
    include_role:
      name: initialise_github_repository
    vars:
      repository: "{{ bootstrap_outputs.github_repositories.value['federicobusetti.com-gcp-bootstrap'] }}"


#  - name: "Clone CSR repository"
#    command: "gcloud source repos clone {{ item.key }} {{ playbook_dir }}/../git/{{ item.key }} --project={{ bootstrap_outputs.cloudbuild_project_id.value }}"
#    with_dict: "{{ bootstrap_outputs.csr_repos.value }}"


  # Outputs keys:
  # - cloudbuild_project_id
  # - csr_repos
  # - gcs_bucket_cloudbuild_artifacts
  # - gcs_bucket_tfstate
  # - kms_crypto_key
  # - kms_keyring
  # - seed_project_id
  # - terraform_sa_email
  # - terraform_sa_name

#  - name: "Print outputs"
#    debug:
#      msg: "{{ item.key }}: {{ item.value }}"
#    with_dict: "{{ bootstrap_outputs }}"
...
